var c=Object.defineProperty;var d=(s,e,t)=>e in s?c(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var n=(s,e,t)=>(d(s,typeof e!="symbol"?e+"":e,t),t);import{b5 as u,b0 as o,b6 as r}from"./index-41171d5e.js";import{u as y}from"./useSupenseQuery-97e21a26.js";const i=s=>s;class m{constructor(){n(this,"keys",{all:()=>["users"],one:e=>["users",e]});n(this,"getAll",async()=>{const{data:e}=await r.get("admin-users");return e.map(i)});n(this,"find",async e=>{const{data:t}=await r.get(`admin-users/${e}`);return i(t)});n(this,"create",e=>r.post("admin-users",e));n(this,"edit",async e=>r.put("admin-users/"+e.id,e));n(this,"changePassword",async e=>r.put(`admin-users/${e.id}/change-password`,e));n(this,"remove",async e=>r.delete("admin-users/"+e))}}const a=new m,w=s=>y({queryKey:a.keys.one(s),queryFn:()=>a.find(s)}),Q=()=>{const s=u();return o({mutationFn:a.create,onSuccess:()=>{s.invalidateQueries(a.keys.all())}})},h=()=>{const s=u();return o({mutationFn:a.edit,onSuccess:(e,t)=>{s.invalidateQueries(a.keys.one(t.id))}})},k=()=>{const s=u();return o({mutationFn:a.changePassword,onSuccess:(e,t)=>{s.invalidateQueries(a.keys.one(t.id))}})};export{h as a,k as b,w as c,Q as u};
