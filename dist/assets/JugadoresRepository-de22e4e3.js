var l=Object.defineProperty;var m=(t,e,a)=>e in t?l(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a;var s=(t,e,a)=>(m(t,typeof e!="symbol"?e+"":e,a),a);import{G as c}from"./enums-ec95615b.js";import{b5 as u,b0 as i,b6 as o}from"./index-41171d5e.js";import{u as d}from"./useSupenseQuery-97e21a26.js";const n=t=>({id:t.id,nombre:t.name,apellido:t.lastName,nro_socio:t.membershipNumber,genero:t.gender||c.MASCULINO});class y{constructor(){s(this,"keys",{all:()=>["jugadores"],one:e=>["jugadores",e],allByCategoria:e=>["jugadores-by-cat"]});s(this,"getAll",async()=>{const{data:e}=await o.get("players/get-all-players");return e.map(n)});s(this,"get",async e=>{const{data:a}=await o.get(`teams/${e}`);return n(a)});s(this,"create",e=>o.post("players/create-player",{name:e.nombre,lastName:e.apellido,membershipNumber:e.nro_socio,gender:e.gender}));s(this,"createList",e=>new Promise(a=>{setTimeout(()=>a("OK"),1e3)}));s(this,"edit",async e=>new Promise(a=>{setTimeout(()=>a("OK"),1e3)}));s(this,"remove",async e=>o.delete("teams/"+e))}}const r=new y,C=()=>d({queryKey:r.keys.all(),queryFn:r.getAll}),J=()=>{const t=u();return i({mutationFn:r.create,onSuccess:()=>{t.invalidateQueries(r.keys.all())}})},M=()=>{const t=u();return i({mutationFn:r.edit,onSuccess:(e,a)=>{t.invalidateQueries(r.keys.one(a.id))}})};export{J as a,M as b,n as g,C as u};
